{"ast":null,"code":"var _jsxFileName = \"/Users/jennablubaugh/Documents/GitHub/React-Application---Jenna-B./src/components/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\n/**\n * Renders an array of strings passed in that can be filtered and added to as an\n * unordered list.\n * @returns Component\n */\nimport ReactDOM from 'react-dom/client';\n//DO I need this?\n//Too scared to remove it\n\n//Also please have mercy\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(_ref) {\n  _s();\n  let {\n    initialMenuItems\n  } = _ref;\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n  //here is where the code is vvv\n  let [menuItems, setMenuItems] = useState(initialMenuItems);\n  // TODO: 2 Using a state hook, maintain the current menu items as an array state.\n  /*Use State is a hook, and creates a variable and a function\n  \n  let[menuItems, setMenuItems] destructuring the array, and the two inside are the variables\n  \"Create a state variable called menuItems, and set its initial value to initial menu items, and also create a function (set menu items) that we can update the state of menu items later\"\n  \n  \n  I'm writing this out to understand it better\n  */\n\n  // let [menuItems, setMenuItems] = useState(initialMenuItems)\n\n  let [filter, setFilter] = useState(\"\");\n  // Adds a single string passed in as parameter to the state element\n  // \"menuItems\" that holds the set of current menu items.\n  /*\n  \n  useState is a hook\n  1. filter\n  2. setFilter -- updates filter state\n  useState(\"\") initializes state with value passed to it\n  \n  create state variable called filter and set initial value to empty string\n  set filter updates it later\n  \n  \n  */\n\n  let addMenuItem = useCallback(() => {\n    setMenuItems([newMenuItem, ...menuItems]);\n    if (newMenuItem.trim() !== \"\") {\n      setMenuItems([newMenuItem, ...menuItems]);\n      setNewMenuItem(\"\");\n    }\n    console.log(\"Added menu item\");\n    //   // TODO: 3. Add a new menu item to the correct variable associated with this class.\n    //   // This involves adding a parameter and changing a class instance variable (props).\n    //   setMenuItems([item, ...menuItems])\n  }, [newMenuItem, menuItems]);\n\n  /*\n  function is addMenuItem, uses a hook called Callback\n  \n  useCallback returns memorized version of callback function,\n  function will only be recreated if one of the dependencies (newMenuItem, menuItem) changes\n  \n  addMenu is name\n  \n  if (newMenuItem bla bla)\n  checks that the input isn't blank\n  \n  \n  \n  */\n\n  const filteredMenuItems = menuItems.filter(item => item.toLowerCase().includes(filter.toLowerCase()));\n\n  //Makes it case insensitive\n\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\n  // \"term\" in them. Each menu item should be an unordered list item wrapped in an unordered list (ul) element.\n\n  // TODO: 1 Render inside the outer div an unordered list of the menu items, with each string in the array\n  // its own item.\n\n  //Find the first \"TODO\" comment in the \"Sidebar\" component.\n  //Implement the rendering of an unordered list of menu items using the initialMenuItems prop, which is an array of strings.\n  //Ensure that the rendered result aligns with the expected behavior outlined in the \"index.js\" file.\n  //Refer to the provided animation for an overview of the intended component behavior.\n\n  //using the w3schools example\n\n  //function Car(props){\n  //return <li>I am a {props.brand}</li>;\n  //}\n  //function Garage(){\n  //const cars = ['Ford', 'BMW', 'Mercedes'];\n  //return (\n  // <ul>\n  //   {cars.map((car) => <Car brand={car} />)}\n  // </ul>\n  // );\n  //}\n  //const root = ReactDOM.createRoot(document.getElementById('root'));\n  //root.render(<Garage />);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMenuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value),\n      placeholder: \"New Menu Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMenuItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"/oaa6lp+ngPTBrV4SYZja6S1wK0=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","ReactDOM","Sidebar","initialMenuItems","newMenuItem","setNewMenuItem","menuItems","setMenuItems","filter","setFilter","addMenuItem","trim","console","log","filteredMenuItems","item","toLowerCase","includes","map","index","event","target","value"],"sources":["/Users/jennablubaugh/Documents/GitHub/React-Application---Jenna-B./src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\"\n/**\n * Renders an array of strings passed in that can be filtered and added to as an\n * unordered list.\n * @returns Component\n */\nimport ReactDOM from 'react-dom/client';\n//DO I need this?\n//Too scared to remove it\n\n//Also please have mercy\n\n\n\n\nexport default function Sidebar({initialMenuItems}) {\n  let [newMenuItem, setNewMenuItem] = useState(\"\")\n  //here is where the code is vvv\n  let [menuItems, setMenuItems] = useState(initialMenuItems)\n  // TODO: 2 Using a state hook, maintain the current menu items as an array state.\n/*Use State is a hook, and creates a variable and a function\n\nlet[menuItems, setMenuItems] destructuring the array, and the two inside are the variables\n\"Create a state variable called menuItems, and set its initial value to initial menu items, and also create a function (set menu items) that we can update the state of menu items later\"\n\n\nI'm writing this out to understand it better\n*/\n\n\n\n  // let [menuItems, setMenuItems] = useState(initialMenuItems)\n\n\n\n\n\n  let [filter, setFilter] = useState(\"\")\n  // Adds a single string passed in as parameter to the state element\n  // \"menuItems\" that holds the set of current menu items.\n/*\n\nuseState is a hook\n1. filter\n2. setFilter -- updates filter state\nuseState(\"\") initializes state with value passed to it\n\ncreate state variable called filter and set initial value to empty string\nset filter updates it later\n\n\n*/\n\n\n\n\n  let addMenuItem = useCallback(() => {\n    setMenuItems([newMenuItem, ...menuItems])\n    if(newMenuItem.trim()!==\"\"){\n      setMenuItems([newMenuItem, ...menuItems])\n      setNewMenuItem(\"\")\n    }\n\n    console.log(\"Added menu item\")\n    //   // TODO: 3. Add a new menu item to the correct variable associated with this class.\n    //   // This involves adding a parameter and changing a class instance variable (props).\n    //   setMenuItems([item, ...menuItems])\n  }, [newMenuItem, menuItems])\n\n/*\nfunction is addMenuItem, uses a hook called Callback\n\nuseCallback returns memorized version of callback function,\nfunction will only be recreated if one of the dependencies (newMenuItem, menuItem) changes\n\naddMenu is name\n\nif (newMenuItem bla bla)\nchecks that the input isn't blank\n\n\n\n*/\n\n\n\n\n\n\n\n\n\n\n\n\nconst filteredMenuItems = menuItems.filter((item) => item.toLowerCase().includes(filter.toLowerCase()))\n\n//Makes it case insensitive\n\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\n  // \"term\" in them. Each menu item should be an unordered list item wrapped in an unordered list (ul) element.\n\n\n\n\n\n\n\n\n  // TODO: 1 Render inside the outer div an unordered list of the menu items, with each string in the array\n  // its own item.\n\n  //Find the first \"TODO\" comment in the \"Sidebar\" component.\n//Implement the rendering of an unordered list of menu items using the initialMenuItems prop, which is an array of strings.\n//Ensure that the rendered result aligns with the expected behavior outlined in the \"index.js\" file.\n//Refer to the provided animation for an overview of the intended component behavior.\n\n//using the w3schools example\n\n//function Car(props){\n  //return <li>I am a {props.brand}</li>;\n//}\n//function Garage(){\n  //const cars = ['Ford', 'BMW', 'Mercedes'];\n  //return (\n   // <ul>\n   //   {cars.map((car) => <Car brand={car} />)}\n   // </ul>\n // );\n//}\n//const root = ReactDOM.createRoot(document.getElementById('root'));\n//root.render(<Garage />);\n\n\n\n  return (\n    <div id=\"root\">\n\n<ul>\n        {filteredMenuItems.map((item, index) => (\n          <li>{item}</li>\n        ))}\n      </ul>\n\n      <input\n        type=\"text\"\n        id=\"newMenuItemValue\"\n        value={newMenuItem}\n        onChange={(event) => setNewMenuItem(event.target.value)}\n        placeholder=\"New Menu Item\"\n      ></input>\n\n\n\n      <br />\n\n      <button\n        onClick={addMenuItem}>Add Item\n      </button>\n      <br />\n      <input\n        id=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={(event) => setFilter(event.target.value)}\n        placeholder=\"Filter by...\"\n      ></input>\n\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;AACA;;AAEA;AAAA;AAKA,eAAe,SAASC,OAAO,OAAqB;EAAA;EAAA,IAApB;IAACC;EAAgB,CAAC;EAChD,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,IAAI,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAACI,gBAAgB,CAAC;EAC1D;EACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAIE;;EAMA,IAAI,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;EACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKE,IAAIW,WAAW,GAAGV,WAAW,CAAC,MAAM;IAClCO,YAAY,CAAC,CAACH,WAAW,EAAE,GAAGE,SAAS,CAAC,CAAC;IACzC,IAAGF,WAAW,CAACO,IAAI,EAAE,KAAG,EAAE,EAAC;MACzBJ,YAAY,CAAC,CAACH,WAAW,EAAE,GAAGE,SAAS,CAAC,CAAC;MACzCD,cAAc,CAAC,EAAE,CAAC;IACpB;IAEAO,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B;IACA;IACA;EACF,CAAC,EAAE,CAACT,WAAW,EAAEE,SAAS,CAAC,CAAC;;EAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAaA,MAAMQ,iBAAiB,GAAGR,SAAS,CAACE,MAAM,CAAEO,IAAI,IAAKA,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACT,MAAM,CAACQ,WAAW,EAAE,CAAC,CAAC;;EAEvG;;EAEE;EACA;;EASA;EACA;;EAEA;EACF;EACA;EACA;;EAEA;;EAEA;EACE;EACF;EACA;EACE;EACA;EACC;EACA;EACA;EACF;EACD;EACA;EACA;;EAIE,oBACE;IAAK,EAAE,EAAC,MAAM;IAAA,wBAElB;MAAA,UACSF,iBAAiB,CAACI,GAAG,CAAC,CAACH,IAAI,EAAEI,KAAK,kBACjC;QAAA,UAAKJ;MAAI;QAAA;QAAA;QAAA;MAAA,QACV;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eAEL;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,kBAAkB;MACrB,KAAK,EAAEX,WAAY;MACnB,QAAQ,EAAGgB,KAAK,IAAKf,cAAc,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACxD,WAAW,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QACpB,eAIT;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MACE,OAAO,EAAEZ,WAAY;MAAA,UAAC;IACxB;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MACE,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,MAAM;MACX,KAAK,EAAEF,MAAO;MACd,QAAQ,EAAGY,KAAK,IAAKX,SAAS,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACnD,WAAW,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEL;AAEV;AAAC,GA3JuBpB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}